/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { CdpAccordionConfig, CdpAccordionProps } from "./components/cdp/cdp-accordion/cdp-accordion.interface";
import { CdpMenuConfig, CdpMenuProps } from "./components/cdp/cdp-menu/cdp-menu.interface";
import { CdpMenuListConfig, CdpMenuListProps } from "./components/cdp/cdp-menu-list/cdp-menu-list.interface";
import { CdpModalConfig, CdpModalProps } from "./components/cdp/cdp-modal/cdp-modal.interface";
import { CdpSwiperConfig, CdpSwiperProps } from "./components/cdp/cdp-swiper/cdp-swiper.interface";
import { Swiper } from "swiper";
import { CdpTooltipConfig, CdpTooltipProps } from "./components/cdp/cdp-tooltip/cdp-tooltip.interface";
export namespace Components {
    interface CdpAccordion {
        "config": CdpAccordionConfig;
        "props": CdpAccordionProps;
    }
    interface CdpMenu {
        "config": CdpMenuConfig;
        "props": CdpMenuProps;
    }
    interface CdpMenuList {
        "config": CdpMenuListConfig;
        "props": CdpMenuListProps;
    }
    interface CdpModal {
        "config": CdpModalConfig;
        "props": CdpModalProps;
    }
    interface CdpSwiper {
        "config": CdpSwiperConfig;
        "getSwiper": () => Promise<Swiper>;
        "props": CdpSwiperProps;
    }
    interface CdpTooltip {
        "config": CdpTooltipConfig;
        "props": CdpTooltipProps;
    }
}
declare global {
    interface HTMLCdpAccordionElement extends Components.CdpAccordion, HTMLStencilElement {
    }
    var HTMLCdpAccordionElement: {
        prototype: HTMLCdpAccordionElement;
        new (): HTMLCdpAccordionElement;
    };
    interface HTMLCdpMenuElement extends Components.CdpMenu, HTMLStencilElement {
    }
    var HTMLCdpMenuElement: {
        prototype: HTMLCdpMenuElement;
        new (): HTMLCdpMenuElement;
    };
    interface HTMLCdpMenuListElement extends Components.CdpMenuList, HTMLStencilElement {
    }
    var HTMLCdpMenuListElement: {
        prototype: HTMLCdpMenuListElement;
        new (): HTMLCdpMenuListElement;
    };
    interface HTMLCdpModalElement extends Components.CdpModal, HTMLStencilElement {
    }
    var HTMLCdpModalElement: {
        prototype: HTMLCdpModalElement;
        new (): HTMLCdpModalElement;
    };
    interface HTMLCdpSwiperElement extends Components.CdpSwiper, HTMLStencilElement {
    }
    var HTMLCdpSwiperElement: {
        prototype: HTMLCdpSwiperElement;
        new (): HTMLCdpSwiperElement;
    };
    interface HTMLCdpTooltipElement extends Components.CdpTooltip, HTMLStencilElement {
    }
    var HTMLCdpTooltipElement: {
        prototype: HTMLCdpTooltipElement;
        new (): HTMLCdpTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "cdp-accordion": HTMLCdpAccordionElement;
        "cdp-menu": HTMLCdpMenuElement;
        "cdp-menu-list": HTMLCdpMenuListElement;
        "cdp-modal": HTMLCdpModalElement;
        "cdp-swiper": HTMLCdpSwiperElement;
        "cdp-tooltip": HTMLCdpTooltipElement;
    }
}
declare namespace LocalJSX {
    interface CdpAccordion {
        "config"?: CdpAccordionConfig;
        "props"?: CdpAccordionProps;
    }
    interface CdpMenu {
        "config"?: CdpMenuConfig;
        "props"?: CdpMenuProps;
    }
    interface CdpMenuList {
        "config": CdpMenuListConfig;
        "props": CdpMenuListProps;
    }
    interface CdpModal {
        "config"?: CdpModalConfig;
        "onClosed"?: (event: CustomEvent<any>) => void;
        "onOpened"?: (event: CustomEvent<any>) => void;
        "props"?: CdpModalProps;
    }
    interface CdpSwiper {
        "config"?: CdpSwiperConfig;
        "props"?: CdpSwiperProps;
    }
    interface CdpTooltip {
        "config"?: CdpTooltipConfig;
        "props"?: CdpTooltipProps;
    }
    interface IntrinsicElements {
        "cdp-accordion": CdpAccordion;
        "cdp-menu": CdpMenu;
        "cdp-menu-list": CdpMenuList;
        "cdp-modal": CdpModal;
        "cdp-swiper": CdpSwiper;
        "cdp-tooltip": CdpTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cdp-accordion": LocalJSX.CdpAccordion & JSXBase.HTMLAttributes<HTMLCdpAccordionElement>;
            "cdp-menu": LocalJSX.CdpMenu & JSXBase.HTMLAttributes<HTMLCdpMenuElement>;
            "cdp-menu-list": LocalJSX.CdpMenuList & JSXBase.HTMLAttributes<HTMLCdpMenuListElement>;
            "cdp-modal": LocalJSX.CdpModal & JSXBase.HTMLAttributes<HTMLCdpModalElement>;
            "cdp-swiper": LocalJSX.CdpSwiper & JSXBase.HTMLAttributes<HTMLCdpSwiperElement>;
            "cdp-tooltip": LocalJSX.CdpTooltip & JSXBase.HTMLAttributes<HTMLCdpTooltipElement>;
        }
    }
}
